{"version":3,"file":"bundle.js","sources":["../../app/node_modules/svelte/internal/index.mjs","../../app/node_modules/svelte/store/index.mjs","../../app/node_modules/tinro/dist/tinro_lib.js","../../app/node_modules/tinro/cmp/Route.svelte","../../app/src/components/navbar.svelte","../../app/src/components/hero.svelte","../../app/src/components/learnmore.svelte","../../app/src/components/howitworks.svelte","../../app/src/home.svelte","../../app/src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import{getContext as C}from\"svelte\";import{writable as F}from\"svelte/store\";function p(e,a=!1){return e=e.slice(e.startsWith(\"/#\")?2:0,e.endsWith(\"/*\")?-2:void 0),e.startsWith(\"/\")||(e=\"/\"+e),e===\"/\"&&(e=\"\"),a&&!e.endsWith(\"/\")&&(e+=\"/\"),e}function d(e,a){e=p(e,!0),a=p(a,!0);let r=[],n={},t=!0,s=e.split(\"/\").map(o=>o.startsWith(\":\")?(r.push(o.slice(1)),\"([^\\\\/]+)\"):o).join(\"\\\\/\"),c=a.match(new RegExp(`^${s}$`));return c||(t=!1,c=a.match(new RegExp(`^${s}`))),c?(r.forEach((o,h)=>n[o]=c[h+1]),{exact:t,params:n,part:c[0].slice(0,-1)}):null}function x(e,a,r){if(r===\"\")return e;if(r[0]===\"/\")return r;let n=c=>c.split(\"/\").filter(o=>o!==\"\"),t=n(e),s=a?n(a):[];return\"/\"+s.map((c,o)=>t[o]).join(\"/\")+\"/\"+r}function m(e,a,r,n){let t=[a,\"data-\"+a].reduce((s,c)=>{let o=e.getAttribute(c);return r&&e.removeAttribute(c),o===null?s:o},!1);return!n&&t===\"\"?!0:t||n||!1}function S(e){let a=e.split(\"&\").map(r=>r.split(\"=\")).reduce((r,n)=>{let t=n[0];if(!t)return r;let s=n.length>1?n[n.length-1]:!0;return typeof s==\"string\"&&s.includes(\",\")&&(s=s.split(\",\")),r[t]===void 0?r[t]=[s]:r[t].push(s),r},{});return Object.entries(a).reduce((r,n)=>(r[n[0]]=n[1].length>1?n[1]:n[1][0],r),{})}function M(e){return Object.entries(e).map(([a,r])=>r?r===!0?a:`${a}=${Array.isArray(r)?r.join(\",\"):r}`:null).filter(a=>a).join(\"&\")}function w(e,a){return e?a+e:\"\"}function k(e){throw new Error(\"[Tinro] \"+e)}var i={HISTORY:1,HASH:2,MEMORY:3,OFF:4,run(e,a,r,n){return e===this.HISTORY?a&&a():e===this.HASH?r&&r():n&&n()},getDefault(){return!window||window.location.pathname===\"srcdoc\"?this.MEMORY:this.HISTORY}};import\"svelte/store\";var y,$,H,b=\"\",l=E();function E(){let e=i.getDefault(),a,r=c=>window.onhashchange=window.onpopstate=y=null,n=c=>a&&a(R(e)),t=c=>{c&&(e=c),r(),e!==i.OFF&&i.run(e,o=>window.onpopstate=n,o=>window.onhashchange=n)&&n()},s=c=>{let o=Object.assign(R(e),c);return o.path+w(M(o.query),\"?\")+w(o.hash,\"#\")};return{mode:t,get:c=>R(e),go(c,o){_(e,c,o),n()},start(c){a=c,t()},stop(){a=null,t(i.OFF)},set(c){this.go(s(c),!c.path)},methods(){return j(this)},base:c=>b=c}}function _(e,a,r){!r&&($=H);let n=t=>history[`${r?\"replace\":\"push\"}State`]({},\"\",t);i.run(e,t=>n(b+a),t=>n(`#${a}`),t=>y=a)}function R(e){let a=window.location,r=i.run(e,t=>(b?a.pathname.replace(b,\"\"):a.pathname)+a.search+a.hash,t=>String(a.hash.slice(1)||\"/\"),t=>y||\"/\"),n=r.match(/^([^?#]+)(?:\\?([^#]+))?(?:\\#(.+))?$/);return H=r,{url:r,from:$,path:n[1]||\"\",query:S(n[2]||\"\"),hash:n[3]||\"\"}}function j(e){let a=()=>e.get().query,r=c=>e.set({query:c}),n=c=>r(c(a())),t=()=>e.get().hash,s=c=>e.set({hash:c});return{hash:{get:t,set:s,clear:()=>s(\"\")},query:{replace:r,clear:()=>r(\"\"),get(c){return c?a()[c]:a()},set(c,o){n(h=>(h[c]=o,h))},delete(c){n(o=>(o[c]&&delete o[c],o))}}}}var f=T();function T(){let{subscribe:e}=F(l.get(),a=>{l.start(a);let r=P(l.go);return()=>{l.stop(),r()}});return{subscribe:e,goto:l.go,params:Q,meta:O,useHashNavigation:a=>l.mode(a?i.HASH:i.HISTORY),mode:{hash:()=>l.mode(i.HASH),history:()=>l.mode(i.HISTORY),memory:()=>l.mode(i.MEMORY)},base:l.base,location:l.methods()}}function Y(e){let a,r,n,t,s=()=>{a=m(e,\"href\").replace(/^\\/#|[?#].*$|\\/$/g,\"\"),r=m(e,\"exact\",!0),n=m(e,\"active-class\",!0,\"active\")},c=()=>{let o=d(a,t);o&&(o.exact&&r||!r)?e.classList.add(n):e.classList.remove(n)};return s(),{destroy:f.subscribe(o=>{t=o.path,c()}),update:()=>{s(),c()}}}function P(e){let a=r=>{let n=r.target.closest(\"a[href]\"),t=n&&m(n,\"target\",!1,\"_self\"),s=n&&m(n,\"tinro-ignore\"),c=r.ctrlKey||r.metaKey||r.altKey||r.shiftKey;if(t==\"_self\"&&!s&&!c&&n){let o=n.getAttribute(\"href\").replace(/^\\/#/,\"\");/^\\/\\/|^#|^[a-zA-Z]+:/.test(o)||(r.preventDefault(),e(o.startsWith(\"/\")?o:n.href.replace(window.location.origin,\"\")))}};return addEventListener(\"click\",a),()=>removeEventListener(\"click\",a)}function Q(){return C(\"tinro\").meta.params}import{hasContext as U,getContext as L,setContext as W,onMount as z,tick as D}from\"svelte\";import{writable as I}from\"svelte/store\";var g=\"tinro\",K=v({pattern:\"\",matched:!0});function q(e){let a=L(g)||K;(a.exact||a.fallback)&&k(`${e.fallback?\"<Route fallback>\":`<Route path=\"${e.path}\">`}  can't be inside ${a.fallback?\"<Route fallback>\":`<Route path=\"${a.path||\"/\"}\"> with exact path`}`);let r=e.fallback?\"fallbacks\":\"childs\",n=I({}),t=v({fallback:e.fallback,parent:a,update(s){t.exact=!s.path.endsWith(\"/*\"),t.pattern=p(`${t.parent.pattern||\"\"}${s.path}`),t.redirect=s.redirect,t.firstmatch=s.firstmatch,t.breadcrumb=s.breadcrumb,t.match()},register:()=>(t.parent[r].add(t),async()=>{t.parent[r].delete(t),t.parent.activeChilds.delete(t),t.router.un&&t.router.un(),t.parent.match()}),show:()=>{e.onShow(),!t.fallback&&t.parent.activeChilds.add(t)},hide:()=>{e.onHide(),t.parent.activeChilds.delete(t)},match:async()=>{t.matched=!1;let{path:s,url:c,from:o,query:h}=t.router.location,u=d(t.pattern,s);if(!t.fallback&&u&&t.redirect&&(!t.exact||t.exact&&u.exact)){let A=x(s,t.parent.pattern,t.redirect);return f.goto(A,!0)}t.meta=u&&{from:o,url:c,query:h,match:u.part,pattern:t.pattern,breadcrumbs:t.parent.meta&&t.parent.meta.breadcrumbs.slice()||[],params:u.params,subscribe:n.subscribe},t.breadcrumb&&t.meta&&t.meta.breadcrumbs.push({name:t.breadcrumb,path:u.part}),n.set(t.meta),u&&!t.fallback&&(!t.exact||t.exact&&u.exact)&&(!t.parent.firstmatch||!t.parent.matched)?(e.onMeta(t.meta),t.parent.matched=!0,t.show()):t.hide(),u&&t.showFallbacks()}});return W(g,t),z(()=>t.register()),t}function O(){return U(g)?L(g).meta:k(\"meta() function must be run inside any `<Route>` child component only\")}function v(e){let a={router:{},exact:!1,pattern:null,meta:null,parent:null,fallback:!1,redirect:!1,firstmatch:!1,breadcrumb:null,matched:!1,childs:new Set,activeChilds:new Set,fallbacks:new Set,async showFallbacks(){if(!this.fallback&&(await D(),this.childs.size>0&&this.activeChilds.size==0||this.childs.size==0&&this.fallbacks.size>0)){let r=this;for(;r.fallbacks.size==0;)if(r=r.parent,!r)return;r&&r.fallbacks.forEach(n=>{if(n.redirect){let t=x(\"/\",n.parent.pattern,n.redirect);f.goto(t,!0)}else n.show()})}},start(){this.router.un||(this.router.un=f.subscribe(r=>{this.router.location=r,this.pattern!==null&&this.match()}))},match(){this.showFallbacks()}};return Object.assign(a,e),a.start(),a}export{Y as active,q as createRouteObject,O as meta,f as router};\n","<script>\n\n    import {createRouteObject} from './../dist/tinro_lib';\n\n    export let path = '/*';\n    export let fallback = false;\n    export let redirect = false;\n    export let firstmatch = false;\n    export let breadcrumb = null;\n\n    let showContent = false;\n    let params = {}; /* DEPRECATED */\n    let meta = {};\n\n    const route = createRouteObject({\n        fallback,\n        onShow(){showContent=true},\n        onHide(){showContent=false},\n        onMeta(newmeta){\n            meta=newmeta;\n            params = meta.params /* DEPRECATED */\n        }\n    });\n\n    $: route.update({\n        path,\n        redirect,\n        firstmatch,\n        breadcrumb,\n    });\n</script>\n\n{#if showContent}\n    <slot {params} {meta}></slot>\n{/if}","<div class=\"navbar bg-base-100\">\n  <div class=\"flex-1\">\n    <a class=\"btn btn-ghost normal-case text-xl\" href=\"/\">SWEET Stack</a>\n  </div>\n  <div class=\"flex-none\">\n    <ul class=\"menu menu-horizontal p-0\">\n      <li><a href=\"#learn-more\">Learn More</a></li>\n      <li><a href=\"#how-it-works\">How it works</a></li>\n      <li><a href=\"https://github.com/hyper63/sweet-stack\">Github</a></li>\n    </ul>\n  </div>\n</div>\n","<div class=\"hero min-h-screen bg-base-200\">\n  <div class=\"hero-content text-center\">\n    <div class=\"max-w-md\">\n      <img\n        src=\"/hero.svg\"\n        alt=\"sweet stack banner with svelte, deno and graphql\"\n      />\n      <h1 class=\"mt-8 text-5xl font-bold\">The SWEET Stack!</h1>\n      <p class=\"py-6\">\n        Svelte is Sexy + Deno is Dynamite + GraphQL is Grand = SWEETNESS!\n      </p>\n      <a\n        class=\"btn btn-primary\"\n        href=\"https://github.com/hyper63/sweet-stack/generate\"\n        >Launch with Template</a\n      >\n      <a class=\"btn\" href=\"#learn-more\">Learn more</a>\n    </div>\n  </div>\n</div>\n","<a id=\"learn-more\" />\n<div class=\"hero min-h-screen bg-base-200\">\n  <div class=\"hero-content text-center\">\n    <div class=\"\">\n      <h2 class=\"my-16 text-5xl font-bold\">Learn more</h2>\n      <div class=\"flex space-x-16\">\n        <div class=\"card w-96 bg-base-100 shadow-xl\">\n          <div class=\"card-body\">\n            <h3 class=\"card-title\">What SWEET Stack is?</h3>\n            <ul class=\"mt-8 list-disc text-left\">\n              <li>Simple</li>\n              <li>Svelte SPA</li>\n              <li>Deno (https)</li>\n              <li>GraphQL (API)</li>\n            </ul>\n          </div>\n        </div>\n        <div class=\"card w-96 bg-base-100 shadow-xl\">\n          <div class=\"card-body\">\n            <h3 class=\"card-title\">What SWEET Stack is not?</h3>\n            <ul class=\"mt-8 list-disc text-left\">\n              <li>No HMR</li>\n              <li>No SSR</li>\n              <li>No Magic</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <h4 class=\"mt-16 mb-4\">Add DaisyUI</h4>\n      <div class=\"text-left mockup-code\">\n        <pre\n          class=\"text-success\"><code> &lt;link href=\"https://cdn.jsdelivr.net/npm/daisyui@2.8.0/dist/full.css\" rel=\"stylesheet\"&gt;&lt;/link&gt;\n        </code></pre>\n        <pre\n          class=\"text-success\"><code> &lt;script src=\"https://cdn.tailwindcss.com\"&gt;&lt;/script&gt;</code\n          ></pre>\n      </div>\n      <a class=\"mt-16 btn\" href=\"#\">Back to Top</a>\n    </div>\n  </div>\n</div>\n","<a id=\"how-it-works\" />\n<div class=\"hero min-h-screen bg-base-200\">\n  <div class=\"hero-content text-center\">\n    <div class=\"max-w-md\">\n      <h2 class=\"my-8 text-5xl font-bold\">How it works</h2>\n\n      <iframe\n        width=\"560\"\n        height=\"315\"\n        src=\"https://www.youtube.com/embed/SgrHhiQ27WQ\"\n        title=\"YouTube video player\"\n        frameborder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowfullscreen\n      />\n      <a class=\"mt-16 btn\" href=\"#\">Back to Top</a>\n    </div>\n  </div>\n</div>\n","<script>\n  import Navbar from \"./components/navbar.svelte\";\n  import Hero from \"./components/hero.svelte\";\n  import LearnMore from \"./components/learnmore.svelte\";\n  import HowItWorks from \"./components/howitworks.svelte\";\n</script>\n\n<Navbar />\n<main>\n  <Hero />\n  <LearnMore />\n  <HowItWorks />\n</main>\n<footer class=\"footer footer-center p-4 bg-base-300 text-base-content\">\n  <div>\n    <p>Copyright © 2022 - All right reserved by hyper63, LLC</p>\n  </div>\n</footer>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","attr","attribute","value","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","get_current_component","Error","getContext","key","$$","context","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","push","seen_callbacks","Set","flushidx","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","Map","callbacks","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","subscribe","invalidate","size","e","startsWith","endsWith","x","r","n","split","t","join","reduce","s","S","includes","entries","w","y","$","H","HISTORY","HASH","MEMORY","OFF","getDefault","window","location","pathname","R","onhashchange","onpopstate","path","isArray","M","query","hash","mode","go","history","_","methods","replace","h","j","base","E","search","String","match","url","f","F","closest","ctrlKey","metaKey","altKey","shiftKey","test","preventDefault","href","origin","addEventListener","removeEventListener","P","goto","params","Q","meta","O","useHashNavigation","memory","T","C","g","K","v","pattern","matched","q","L","exact","fallback","I","parent","redirect","firstmatch","breadcrumb","register","async","activeChilds","router","un","show","onShow","hide","onHide","u","RegExp","part","A","breadcrumbs","onMeta","showFallbacks","childs","fallbacks","slot_ctx","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","undefined","merged","len","Math","max","create_if_block","showContent","route","createRouteObject","$$invalidate","newmeta","div2","a0","div8","main","footer","body"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EA0ChF,SAASE,EAAiBC,EAAYC,EAAKC,EAASf,GAChD,OAAOa,EAAW,IAAMb,EAtE5B,SAAgBgB,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,EAmEDG,CAAOJ,EAAQD,IAAIM,QAASP,EAAW,GAAGb,EAAGc,KAC7CC,EAAQD,IAyOlB,SAASO,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAoDvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAUxC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAoBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAqChB,SAASI,EAAKhB,EAAMiB,EAAWC,GACd,MAATA,EACAlB,EAAKmB,gBAAgBF,GAChBjB,EAAKoB,aAAaH,KAAeC,GACtClB,EAAKqB,aAAaJ,EAAWC,GA+erC,IAAII,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,EAExB,SAASC,IACL,IAAKH,EACD,MAAM,IAAII,MAAM,oDACpB,OAAOJ,EA+BX,SAASK,EAAWC,GAChB,OAAOH,IAAwBI,GAAGC,QAAQC,IAAIH,GAmBlD,MAAMI,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EACvB,SAASC,IACAD,IACDA,GAAmB,EACnBH,EAAiBK,KAAKC,IAO9B,SAASC,EAAoBlE,GACzByD,EAAiBU,KAAKnE,GAuB1B,MAAMoE,EAAiB,IAAIC,IAC3B,IAAIC,EAAW,EACf,SAASL,IACL,MAAMM,EAAkB1B,EACxB,EAAG,CAGC,KAAOyB,EAAWf,EAAiBiB,QAAQ,CACvC,MAAMzB,EAAYQ,EAAiBe,GACnCA,IACAxB,EAAsBC,GACtB0B,EAAO1B,EAAUK,IAKrB,IAHAN,EAAsB,MACtBS,EAAiBiB,OAAS,EAC1BF,EAAW,EACJd,EAAkBgB,QACrBhB,EAAkBkB,KAAlBlB,GAIJ,IAAK,IAAImB,EAAI,EAAGA,EAAIlB,EAAiBe,OAAQG,GAAK,EAAG,CACjD,MAAMC,EAAWnB,EAAiBkB,GAC7BP,EAAeS,IAAID,KAEpBR,EAAeU,IAAIF,GACnBA,KAGRnB,EAAiBe,OAAS,QACrBjB,EAAiBiB,QAC1B,KAAOd,EAAgBc,QACnBd,EAAgBgB,KAAhBhB,GAEJI,GAAmB,EACnBM,EAAeW,QACfjC,EAAsByB,GAE1B,SAASE,EAAOrB,GACZ,GAAoB,OAAhBA,EAAG4B,SAAmB,CACtB5B,EAAGqB,SACHrE,EAAQgD,EAAG6B,eACX,MAAMC,EAAQ9B,EAAG8B,MACjB9B,EAAG8B,MAAQ,EAAE,GACb9B,EAAG4B,UAAY5B,EAAG4B,SAASG,EAAE/B,EAAGtC,IAAKoE,GACrC9B,EAAGgC,aAAa9E,QAAQ4D,IAiBhC,MAAMmB,EAAW,IAAIhB,IACrB,IAAIiB,EAcJ,SAASC,EAAcC,EAAOC,GACtBD,GAASA,EAAMb,IACfU,EAASK,OAAOF,GAChBA,EAAMb,EAAEc,IAGhB,SAASE,EAAeH,EAAOC,EAAO7D,EAAQgD,GAC1C,GAAIY,GAASA,EAAMI,EAAG,CAClB,GAAIP,EAASR,IAAIW,GACb,OACJH,EAASP,IAAIU,GACbF,EAAOO,EAAE1B,MAAK,KACVkB,EAASK,OAAOF,GACZZ,IACIhD,GACA4D,EAAMM,EAAE,GACZlB,QAGRY,EAAMI,EAAEH,IA6oBhB,SAASM,EAAiBP,GACtBA,GAASA,EAAMK,IAKnB,SAASG,EAAgBjD,EAAWzB,EAAQI,EAAQuE,GAChD,MAAMjB,SAAEA,EAAQkB,SAAEA,EAAQC,WAAEA,EAAUf,aAAEA,GAAiBrC,EAAUK,GACnE4B,GAAYA,EAASoB,EAAE9E,EAAQI,GAC1BuE,GAED/B,GAAoB,KAChB,MAAMmC,EAAiBH,EAASI,IAAIvG,GAAKwG,OAAOhG,GAC5C4F,EACAA,EAAWhC,QAAQkC,GAKnBjG,EAAQiG,GAEZtD,EAAUK,GAAG8C,SAAW,MAGhCd,EAAa9E,QAAQ4D,GAEzB,SAASsC,EAAkBzD,EAAW0D,GAClC,MAAMrD,EAAKL,EAAUK,GACD,OAAhBA,EAAG4B,WACH5E,EAAQgD,EAAG+C,YACX/C,EAAG4B,UAAY5B,EAAG4B,SAASc,EAAEW,GAG7BrD,EAAG+C,WAAa/C,EAAG4B,SAAW,KAC9B5B,EAAGtC,IAAM,IAWjB,SAAS4F,EAAK3D,EAAW4D,EAASC,EAAUC,EAAiBC,EAAWC,EAAOC,EAAe9B,EAAQ,EAAE,IACpG,MAAM+B,EAAmBpE,EACzBC,EAAsBC,GACtB,MAAMK,EAAKL,EAAUK,GAAK,CACtB4B,SAAU,KACVlE,IAAK,KAELiG,MAAAA,EACAtC,OAAQ3E,EACRgH,UAAAA,EACAI,MAAOjH,IAEPiG,SAAU,GACVC,WAAY,GACZgB,cAAe,GACflC,cAAe,GACfG,aAAc,GACd/B,QAAS,IAAI+D,IAAIT,EAAQtD,UAAY4D,EAAmBA,EAAiB7D,GAAGC,QAAU,KAEtFgE,UAAWpH,IACXiF,MAAAA,EACAoC,YAAY,EACZC,KAAMZ,EAAQrF,QAAU2F,EAAiB7D,GAAGmE,MAEhDP,GAAiBA,EAAc5D,EAAGmE,MAClC,IAAIC,GAAQ,EAkBZ,GAjBApE,EAAGtC,IAAM8F,EACHA,EAAS7D,EAAW4D,EAAQI,OAAS,IAAI,CAACpC,EAAG8C,KAAQC,KACnD,MAAMjF,EAAQiF,EAAKlD,OAASkD,EAAK,GAAKD,EAOtC,OANIrE,EAAGtC,KAAOgG,EAAU1D,EAAGtC,IAAI6D,GAAIvB,EAAGtC,IAAI6D,GAAKlC,MACtCW,EAAGkE,YAAclE,EAAG8D,MAAMvC,IAC3BvB,EAAG8D,MAAMvC,GAAGlC,GACZ+E,GAxCpB,SAAoBzE,EAAW4B,IACI,IAA3B5B,EAAUK,GAAG8B,MAAM,KACnB3B,EAAiBY,KAAKpB,GACtBgB,IACAhB,EAAUK,GAAG8B,MAAMyC,KAAK,IAE5B5E,EAAUK,GAAG8B,MAAOP,EAAI,GAAM,IAAO,GAAMA,EAAI,GAmC/BiD,CAAW7E,EAAW4B,IAEvB8C,KAET,GACNrE,EAAGqB,SACH+C,GAAQ,EACRpH,EAAQgD,EAAG6B,eAEX7B,EAAG4B,WAAW6B,GAAkBA,EAAgBzD,EAAGtC,KAC/C6F,EAAQrF,OAAQ,CAChB,GAAIqF,EAAQkB,QAAS,CAEjB,MAAMC,EA91ClB,SAAkB/F,GACd,OAAOgG,MAAMC,KAAKjG,EAAQkG,YA61CJC,CAASvB,EAAQrF,QAE/B8B,EAAG4B,UAAY5B,EAAG4B,SAASmD,EAAEL,GAC7BA,EAAMxH,QAAQsB,QAIdwB,EAAG4B,UAAY5B,EAAG4B,SAASa,IAE3Bc,EAAQyB,OACR7C,EAAcxC,EAAUK,GAAG4B,UAC/BgB,EAAgBjD,EAAW4D,EAAQrF,OAAQqF,EAAQjF,OAAQiF,EAAQV,eAEnEhC,IAEJnB,EAAsBmE,GAkD1B,MAAMoB,EACFC,WACI9B,EAAkB+B,KAAM,GACxBA,KAAKD,SAAWxI,EAEpB0I,IAAIC,EAAM7D,GACN,MAAMyC,EAAakB,KAAKnF,GAAGiE,UAAUoB,KAAUF,KAAKnF,GAAGiE,UAAUoB,GAAQ,IAEzE,OADApB,EAAUlD,KAAKS,GACR,KACH,MAAM8D,EAAQrB,EAAUsB,QAAQ/D,IACjB,IAAX8D,GACArB,EAAUuB,OAAOF,EAAO,IAGpCG,KAAKC,GA73DT,IAAkBC,EA83DNR,KAAKS,QA93DCD,EA83DkBD,EA73DG,IAA5B5I,OAAO+I,KAAKF,GAAKvE,UA83DhB+D,KAAKnF,GAAGkE,YAAa,EACrBiB,KAAKS,MAAMF,GACXP,KAAKnF,GAAGkE,YAAa,ICx6DjC,MAAM4B,EAAmB,GAgBzB,SAASC,EAAS1G,EAAO2G,EAAQtJ,GAC7B,IAAIuJ,EACJ,MAAMC,EAAc,IAAIjF,IACxB,SAASkF,EAAIC,GACT,GAAI/I,EAAegC,EAAO+G,KACtB/G,EAAQ+G,EACJH,GAAM,CACN,MAAMI,GAAaP,EAAiB1E,OACpC,IAAK,MAAMkF,KAAcJ,EACrBI,EAAW,KACXR,EAAiB/E,KAAKuF,EAAYjH,GAEtC,GAAIgH,EAAW,CACX,IAAK,IAAI9E,EAAI,EAAGA,EAAIuE,EAAiB1E,OAAQG,GAAK,EAC9CuE,EAAiBvE,GAAG,GAAGuE,EAAiBvE,EAAI,IAEhDuE,EAAiB1E,OAAS,IAuB1C,MAAO,CAAE+E,IAAAA,EAAK9E,OAlBd,SAAgBzE,GACZuJ,EAAIvJ,EAAGyC,KAiBWkH,UAftB,SAAmB5J,EAAK6J,EAAa9J,GACjC,MAAM4J,EAAa,CAAC3J,EAAK6J,GAMzB,OALAN,EAAYxE,IAAI4E,GACS,IAArBJ,EAAYO,OACZR,EAAOD,EAAMG,IAAQzJ,GAEzBC,EAAI0C,GACG,KACH6G,EAAY5D,OAAOgE,GACM,IAArBJ,EAAYO,OACZR,IACAA,EAAO,SCtDqD,SAASlE,EAAE2E,EAAEpJ,GAAE,GAAI,OAAOoJ,EAAEA,EAAE1I,MAAM0I,EAAEC,WAAW,MAAM,EAAE,EAAED,EAAEE,SAAS,OAAO,OAAE,IAAUD,WAAW,OAAOD,EAAE,IAAIA,GAAO,MAAJA,IAAUA,EAAE,IAAIpJ,IAAIoJ,EAAEE,SAAS,OAAOF,GAAG,KAAKA,EAAiT,SAASG,EAAEH,EAAEpJ,EAAEwJ,GAAG,GAAO,KAAJA,EAAO,OAAOJ,EAAE,GAAU,MAAPI,EAAE,GAAS,OAAOA,EAAE,IAAIC,EAAEtE,GAAGA,EAAEuE,MAAM,KAAK7D,QAAOX,GAAO,KAAJA,IAAQyE,EAAEF,EAAEL,GAAe,MAAM,KAAhBpJ,EAAEyJ,EAAEzJ,GAAG,IAAe4F,KAAI,CAACT,EAAED,IAAIyE,EAAEzE,KAAI0E,KAAK,KAAK,IAAIJ,EAAE,SAAS9D,EAAE0D,EAAEpJ,EAAEwJ,EAAEC,GAAG,IAAIE,EAAE,CAAC3J,EAAE,QAAQA,GAAG6J,QAAO,CAACC,EAAE3E,KAAK,IAAID,EAAEkE,EAAEnH,aAAakD,GAAG,OAAOqE,GAAGJ,EAAEpH,gBAAgBmD,GAAO,OAAJD,EAAS4E,EAAE5E,KAAG,GAAI,OAAOuE,GAAO,KAAJE,IAAUA,GAAGF,IAAG,GAAG,SAASM,EAAEX,GAAG,IAAIpJ,EAAEoJ,EAAEM,MAAM,KAAK9D,KAAI4D,GAAGA,EAAEE,MAAM,OAAMG,QAAO,CAACL,EAAEC,KAAK,IAAIE,EAAEF,EAAE,GAAG,IAAIE,EAAE,OAAOH,EAAE,IAAIM,IAAEL,EAAE3F,OAAO,IAAE2F,EAAEA,EAAE3F,OAAO,GAAM,MAAiB,iBAAHgG,GAAaA,EAAEE,SAAS,OAAOF,EAAEA,EAAEJ,MAAM,WAAa,IAAPF,EAAEG,GAAYH,EAAEG,GAAG,CAACG,GAAGN,EAAEG,GAAGlG,KAAKqG,GAAGN,IAAG,IAAI,OAAOhK,OAAOyK,QAAQjK,GAAG6J,QAAO,CAACL,EAAEC,KAAKD,EAAEC,EAAE,IAAIA,EAAE,GAAG3F,OAAO,EAAE2F,EAAE,GAAGA,EAAE,GAAG,GAAGD,IAAG,IAAyI,SAASU,EAAEd,EAAEpJ,GAAG,OAAOoJ,EAAEpJ,EAAEoJ,EAAE,GAAG,SAAS5I,EAAE4I,GAAG,MAAM,IAAI7G,MAAM,WAAW6G,GAAG,IAAoOe,EAAEC,EAAEC,EAApOpG,EAAE,CAACqG,QAAQ,EAAEC,KAAK,EAAEC,OAAO,EAAEC,IAAI,EAAEpL,IAAI+J,EAAEpJ,EAAEwJ,EAAEC,GAAG,OAAOL,IAAIvB,KAAKyC,QAAQtK,GAAGA,IAAIoJ,IAAIvB,KAAK0C,KAAKf,GAAGA,IAAIC,GAAGA,KAAKiB,aAAa,OAAOC,QAAmC,WAA3BA,OAAOC,SAASC,SAAgChD,KAAKyC,QAAjBzC,KAAK2C,SAAqDvK,EAAE,GAAGwH,EAAM,WAAa,IAAqBzH,EAAjBoJ,EAAEnF,EAAEyG,aAAiEjB,EAAEtE,GAAGnF,GAAGA,EAAE8K,EAAE1B,IAAIO,EAAExE,IAAIA,IAAIiE,EAAEjE,GAAzEwF,OAAOI,aAAaJ,OAAOK,WAAWb,EAAE,KAAwCf,IAAInF,EAAEwG,KAAKxG,EAAE5E,IAAI+J,GAAElE,GAAGyF,OAAOK,WAAWvB,IAAEvE,GAAGyF,OAAOI,aAAatB,KAAIA,KAAKK,EAAE3E,IAAI,IAAID,EAAE1F,OAAOiB,OAAOqK,EAAE1B,GAAGjE,GAAG,OAAOD,EAAE+F,KAAKf,EAAzrB,SAAWd,GAAG,OAAO5J,OAAOyK,QAAQb,GAAGxD,KAAI,EAAE5F,EAAEwJ,KAAKA,GAAM,IAAJA,EAAOxJ,EAAE,GAAGA,KAAKqH,MAAM6D,QAAQ1B,GAAGA,EAAEI,KAAK,KAAKJ,IAAI,OAAM3D,QAAO7F,GAAGA,IAAG4J,KAAK,KAA2jBuB,CAAEjG,EAAEkG,OAAO,KAAKlB,EAAEhF,EAAEmG,KAAK,MAAM,MAAM,CAACC,KAAK3B,EAAE/G,IAAIuC,GAAG2F,EAAE1B,GAAGmC,GAAGpG,EAAED,IAAgI,SAAWkE,EAAEpJ,EAAEwJ,IAAIA,IAAIY,EAAEC,GAAG,IAAIZ,EAAEE,GAAG6B,SAAWhC,EAAE,UAAU,QAAf,SAA8B,GAAG,GAAGG,GAAG1F,EAAE5E,IAAI+J,GAAEO,GAAGF,EAAExJ,EAAED,KAAG2J,GAAGF,EAAE,IAAIzJ,OAAK2J,GAAGQ,EAAEnK,KAAtPyL,CAAErC,EAAEjE,EAAED,GAAGuE,KAAKf,MAAMvD,GAAGnF,EAAEmF,EAAEwE,KAAKhB,OAAO3I,EAAE,KAAK2J,EAAE1F,EAAEwG,MAAM5B,IAAI1D,GAAG0C,KAAK0D,GAAGzB,EAAE3E,IAAIA,EAAE8F,OAAOS,UAAU,OAAsa,SAAWtC,GAAG,IAAIpJ,EAAE,IAAIoJ,EAAExG,MAAMwI,MAAM5B,EAAErE,GAAGiE,EAAEP,IAAI,CAACuC,MAAMjG,IAAIsE,EAAEtE,GAAGqE,EAAErE,EAAEnF,MAAyB8J,EAAE3E,GAAGiE,EAAEP,IAAI,CAACwC,KAAKlG,IAAI,MAAM,CAACkG,KAAK,CAACzI,IAAnD,IAAIwG,EAAExG,MAAMyI,KAA6CxC,IAAIiB,EAAEzF,MAAM,IAAIyF,EAAE,KAAKsB,MAAM,CAACO,QAAQnC,EAAEnF,MAAM,IAAImF,EAAE,IAAI5G,IAAIuC,GAAUA,EAAEnF,IAAImF,GAAGnF,IAAK6I,IAAI1D,EAAED,GAAGuE,GAAEmC,IAAIA,EAAEzG,GAAGD,EAAE0G,MAAK5G,OAAOG,GAAGsE,GAAEvE,IAAIA,EAAEC,WAAWD,EAAEC,GAAGD,QAAtrB2G,CAAEhE,OAAOiE,KAAK3G,GAAGlF,EAAEkF,GAApb4G,GAAmjB,SAASjB,EAAE1B,GAAG,IAAIpJ,EAAE2K,OAAOC,SAASpB,EAAEvF,EAAE5E,IAAI+J,GAAEO,IAAI1J,EAAED,EAAE6K,SAASc,QAAQ1L,EAAE,IAAID,EAAE6K,UAAU7K,EAAEgM,OAAOhM,EAAEqL,OAAK1B,GAAGsC,OAAOjM,EAAEqL,KAAK3K,MAAM,IAAI,OAAKiJ,GAAGQ,GAAG,MAAKV,EAAED,EAAE0C,MAAM,uCAAuC,OAAO7B,EAAEb,EAAE,CAAC2C,IAAI3C,EAAElC,KAAK8C,EAAEa,KAAKxB,EAAE,IAAI,GAAG2B,MAAMrB,EAAEN,EAAE,IAAI,IAAI4B,KAAK5B,EAAE,IAAI,IAAkS,IAAI2C,GAAM,WAAa,IAAInD,UAAUG,GAAGiD,EAAE5E,EAAE7E,OAAM5C,IAAIyH,EAAEiB,MAAM1I,GAAG,IAAIwJ,EAA4hB,SAAWJ,GAAG,IAAIpJ,EAAEwJ,IAAI,IAAIC,EAAED,EAAE5I,OAAO0L,QAAQ,WAAW3C,EAAEF,GAAG/D,EAAE+D,EAAE,UAAS,EAAG,SAASK,EAAEL,GAAG/D,EAAE+D,EAAE,gBAAgBtE,EAAEqE,EAAE+C,SAAS/C,EAAEgD,SAAShD,EAAEiD,QAAQjD,EAAEkD,SAAS,GAAM,SAAH/C,IAAaG,IAAI3E,GAAGsE,EAAE,CAAC,IAAIvE,EAAEuE,EAAExH,aAAa,QAAQ0J,QAAQ,OAAO,IAAI,uBAAuBgB,KAAKzH,KAAKsE,EAAEoD,iBAAiBxD,EAAElE,EAAEmE,WAAW,KAAKnE,EAAEuE,EAAEoD,KAAKlB,QAAQhB,OAAOC,SAASkC,OAAO,QAAQ,OAAOC,iBAAiB,QAAQ/M,GAAG,IAAIgN,oBAAoB,QAAQhN,GAA77BiN,CAAExF,EAAE8D,IAAI,MAAM,KAAK9D,EAAEkB,OAAOa,QAAO,MAAM,CAACP,UAAUG,EAAE8D,KAAKzF,EAAE8D,GAAG4B,OAAOC,GAAEC,KAAKC,GAAEC,kBAAkBvN,GAAGyH,EAAE6D,KAAKtL,EAAEiE,EAAEsG,KAAKtG,EAAEqG,SAASgB,KAAK,CAACD,KAAK,IAAI5D,EAAE6D,KAAKrH,EAAEsG,MAAMiB,QAAQ,IAAI/D,EAAE6D,KAAKrH,EAAEqG,SAASkD,OAAO,IAAI/F,EAAE6D,KAAKrH,EAAEuG,SAASsB,KAAKrE,EAAEqE,KAAKlB,SAASnD,EAAEiE,WAAjT+B,GAAigC,SAASL,KAAI,OAAOM,EAAE,SAASL,KAAKF,OAA0I,IAAIQ,GAAE,QAAQC,GAAEC,GAAE,CAACC,QAAQ,GAAGC,SAAQ,IAAK,SAASC,GAAE5E,GAAG,IAAIpJ,EAAEiO,EAAEN,KAAIC,IAAG5N,EAAEkO,OAAOlO,EAAEmO,WAAW3N,EAAE,GAAG4I,EAAE+E,SAAS,mBAAmB,gBAAgB/E,EAAE6B,6BAA6BjL,EAAEmO,SAAS,mBAAmB,gBAAgBnO,EAAEiL,MAAM,2BAA2B,IAAIzB,EAAEJ,EAAE+E,SAAS,YAAY,SAAS1E,EAAE2E,EAAE,IAAIzE,EAAEkE,GAAE,CAACM,SAAS/E,EAAE+E,SAASE,OAAOrO,EAAE+D,OAAO+F,GAAGH,EAAEuE,OAAOpE,EAAEmB,KAAK3B,SAAS,MAAMK,EAAEmE,QAAQrJ,EAAE,GAAGkF,EAAE0E,OAAOP,SAAS,KAAKhE,EAAEmB,QAAQtB,EAAE2E,SAASxE,EAAEwE,SAAS3E,EAAE4E,WAAWzE,EAAEyE,WAAW5E,EAAE6E,WAAW1E,EAAE0E,WAAW7E,EAAEuC,SAASuC,SAAS,KAAK9E,EAAE0E,OAAO7E,GAAGpF,IAAIuF,GAAG+E,UAAU/E,EAAE0E,OAAO7E,GAAGxE,OAAO2E,GAAGA,EAAE0E,OAAOM,aAAa3J,OAAO2E,GAAGA,EAAEiF,OAAOC,IAAIlF,EAAEiF,OAAOC,KAAKlF,EAAE0E,OAAOnC,UAAU4C,KAAK,KAAK1F,EAAE2F,UAAUpF,EAAEwE,UAAUxE,EAAE0E,OAAOM,aAAavK,IAAIuF,IAAIqF,KAAK,KAAK5F,EAAE6F,SAAStF,EAAE0E,OAAOM,aAAa3J,OAAO2E,IAAIuC,MAAMwC,UAAU/E,EAAEoE,SAAQ,EAAG,IAAI9C,KAAKnB,EAAEqC,IAAIhH,EAAEmC,KAAKpC,EAAEkG,MAAMQ,GAAGjC,EAAEiF,OAAOhE,SAASsE,EAAp9I,SAAW9F,EAAEpJ,GAAGoJ,EAAE3E,EAAE2E,GAAE,GAAIpJ,EAAEyE,EAAEzE,GAAE,GAAI,IAAIwJ,EAAE,GAAGC,EAAE,GAAGE,GAAE,EAAGG,EAAEV,EAAEM,MAAM,KAAK9D,KAAIV,GAAGA,EAAEmE,WAAW,MAAMG,EAAE/F,KAAKyB,EAAExE,MAAM,IAAI,aAAawE,IAAG0E,KAAK,OAAOzE,EAAEnF,EAAEkM,MAAM,IAAIiD,OAAO,IAAIrF,OAAO,OAAO3E,IAAIwE,GAAE,EAAGxE,EAAEnF,EAAEkM,MAAM,IAAIiD,OAAO,IAAIrF,OAAO3E,GAAGqE,EAAE5J,SAAQ,CAACsF,EAAE0G,IAAInC,EAAEvE,GAAGC,EAAEyG,EAAE,KAAI,CAACsC,MAAMvE,EAAEwD,OAAO1D,EAAE2F,KAAKjK,EAAE,GAAGzE,MAAM,GAAG,KAAK,KAA4qI0E,CAAEuE,EAAEmE,QAAQhE,GAAG,IAAIH,EAAEwE,UAAUe,GAAGvF,EAAE2E,YAAY3E,EAAEuE,OAAOvE,EAAEuE,OAAOgB,EAAEhB,OAAO,CAAC,IAAImB,EAAE9F,EAAEO,EAAEH,EAAE0E,OAAOP,QAAQnE,EAAE2E,UAAU,OAAOlC,GAAEc,KAAKmC,GAAE,GAAI1F,EAAE0D,KAAK6B,GAAG,CAAC5H,KAAKpC,EAAEiH,IAAIhH,EAAEiG,MAAMQ,EAAEM,MAAMgD,EAAEE,KAAKtB,QAAQnE,EAAEmE,QAAQwB,YAAY3F,EAAE0E,OAAOhB,MAAM1D,EAAE0E,OAAOhB,KAAKiC,YAAY5O,SAAS,GAAGyM,OAAO+B,EAAE/B,OAAOlE,UAAUQ,EAAER,WAAWU,EAAE6E,YAAY7E,EAAE0D,MAAM1D,EAAE0D,KAAKiC,YAAY7L,KAAK,CAACnC,KAAKqI,EAAE6E,WAAWvD,KAAKiE,EAAEE,OAAO3F,EAAEZ,IAAIc,EAAE0D,OAAM6B,GAAIvF,EAAEwE,aAAYxE,EAAEuE,OAAOvE,EAAEuE,OAAOgB,EAAEhB,QAAUvE,EAAE0E,OAAOE,YAAa5E,EAAE0E,OAAON,QAAyDpE,EAAEqF,QAAjD5F,EAAEmG,OAAO5F,EAAE0D,MAAM1D,EAAE0E,OAAON,SAAQ,EAAGpE,EAAEmF,QAAiBI,GAAGvF,EAAE6F,mBAAmB,OFg9BtuK/M,EEh9B+uKkL,GFg9B1uKhL,EEh9B4uKgH,EFi9BjwKrH,IAAwBI,GAAGC,QAAQkG,IAAIpG,EAAKE,GAxB/BrD,EEz7ByvK,IAAIqK,EAAE8E,WF07B5wKnM,IAAwBI,GAAG8C,SAAS/B,KAAKnE,GE17B+uKqK,EFy7B5xK,IAAiBrK,EAuBGmD,EAAKE,EEh9BqwK,SAAS2K,KAAI,OFy9BvxK7K,EEz9BgyKkL,GF09BzyKrL,IAAwBI,GAAGC,QAAQwB,IAAI1B,GE19BqwKwL,EAAEN,IAAGN,KAAK7M,EAAE,yEFy9Bn0K,IAAoBiC,EEz9Bw3K,SAASoL,GAAEzE,GAAG,IAAIpJ,EAAE,CAAC4O,OAAO,GAAGV,OAAM,EAAGJ,QAAQ,KAAKT,KAAK,KAAKgB,OAAO,KAAKF,UAAS,EAAGG,UAAS,EAAGC,YAAW,EAAGC,WAAW,KAAKT,SAAQ,EAAG0B,OAAO,IAAI9L,IAAIgL,aAAa,IAAIhL,IAAI+L,UAAU,IAAI/L,IAAI+K,sBAAsB,IAAI7G,KAAKsG,iBFq/BzmL9K,IACOJ,GEt/BunL4E,KAAK4H,OAAOtG,KAAK,GAA2B,GAAxBtB,KAAK8G,aAAaxF,MAA2B,GAAlBtB,KAAK4H,OAAOtG,MAAStB,KAAK6H,UAAUvG,KAAK,GAAG,CAAC,IAAIK,EAAE3B,KAAK,KAAuB,GAAlB2B,EAAEkG,UAAUvG,MAAS,GAAGK,EAAEA,EAAE6E,QAAQ7E,EAAE,OAAOA,GAAGA,EAAEkG,UAAU9P,SAAQ6J,IAAI,GAAGA,EAAE6E,SAAS,CAAC,IAAI3E,EAAEJ,EAAE,IAAIE,EAAE4E,OAAOP,QAAQrE,EAAE6E,UAAUlC,GAAEc,KAAKvD,GAAE,QAASF,EAAEqF,YAAWpG,QAAQb,KAAK+G,OAAOC,KAAKhH,KAAK+G,OAAOC,GAAGzC,GAAEnD,WAAUO,IAAI3B,KAAK+G,OAAOhE,SAASpB,EAAiB,OAAf3B,KAAKiG,SAAgBjG,KAAKqE,aAAYA,QAAQrE,KAAK2H,kBAAkB,OAAOhQ,OAAOiB,OAAOT,EAAEoJ,GAAGpJ,EAAE0I,QAAQ1I,kHFiErkM,SAAqBG,EAAYC,EAAKC,EAASf,GAC3C,GAAIa,EAAY,CACZ,MAAMwP,EAAWzP,EAAiBC,EAAYC,EAAKC,EAASf,GAC5D,OAAOa,EAAW,GAAGwP,4FA0B7B,SAA0BC,EAAMC,EAAiBzP,EAAKC,EAASyP,EAAcC,GACzE,GAAID,EAAc,CACd,MAAME,EAAe9P,EAAiB2P,EAAiBzP,EAAKC,EAAS0P,GACrEH,EAAKnL,EAAEuL,EAAcF,kBArB7B,SAA0B3P,EAAYE,EAASmE,EAAOlF,GAClD,GAAIa,EAAW,IAAMb,EAAI,CACrB,MAAM2Q,EAAO9P,EAAW,GAAGb,EAAGkF,IAC9B,QAAsB0L,IAAlB7P,EAAQmE,MACR,OAAOyL,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,MAAME,EAAS,GACTC,EAAMC,KAAKC,IAAIjQ,EAAQmE,MAAMV,OAAQmM,EAAKnM,QAChD,IAAK,IAAIG,EAAI,EAAGA,EAAImM,EAAKnM,GAAK,EAC1BkM,EAAOlM,GAAK5D,EAAQmE,MAAMP,GAAKgM,EAAKhM,GAExC,OAAOkM,EAEX,OAAO9P,EAAQmE,MAAQyL,EAE3B,OAAO5P,EAAQmE,oBAYnB,SAAkCnE,GAC9B,GAAIA,EAAQD,IAAI0D,OAAS,GAAI,CACzB,MAAMU,EAAQ,GACRV,EAASzD,EAAQD,IAAI0D,OAAS,GACpC,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAQG,IACxBO,EAAMP,IAAM,EAEhB,OAAOO,EAEX,OAAQ,iGGjFPpE,EAAW,IAAAmQ,GAAAnQ,yBHwXLqB,EAAK,gDGxXXrB,EAAW,2EHijCZwE,EAAS,CACL4E,EAAG,EACHrE,EAAG,GACHV,EAAGG,2BAIFA,EAAO4E,GACR9J,EAAQkF,EAAOO,GAEnBP,EAASA,EAAOH,oHGvlCLwG,KAAAA,EAAO,MAAI7C,GACX+F,SAAAA,GAAW,GAAK/F,GAChBkG,SAAAA,GAAW,GAAKlG,GAChBmG,WAAAA,GAAa,GAAKnG,GAClBoG,WAAAA,EAAa,MAAIpG,EAExBoI,GAAc,EACdrD,EAAM,GACNE,EAAI,GAEF,MAAAoD,EAAQC,GAAiB,CAC3BvC,SAAAA,EACAY,SAAS4B,EAAA,EAAAH,GAAY,IACrBvB,SAAS0B,EAAA,EAAAH,GAAY,IACrBjB,OAAOqB,GACHD,EAAA,EAAAtD,EAAKuD,OACLzD,EAASE,EAAKF,0QAInBsD,EAAM1M,OAAM,CACXkH,KAAAA,EACAqD,SAAAA,EACAC,WAAAA,EACAC,WAAAA,olBC5BRzN,EAWMH,EAAAiQ,EAAA7P,irBCXND,EAmBMH,EAAAiQ,EAAA7P,47CCnBND,EAAqBH,EAAAkQ,EAAA9P,YACrBD,EAuCMH,EAAAmQ,EAAA/P,qsBCxCND,EAAuBH,EAAAkQ,EAAA9P,YACvBD,EAiBMH,EAAAiQ,EAAA7P,sgBCVND,EAIOH,EAAAoQ,EAAAhQ,8DACPD,EAISH,EAAAqQ,EAAAjQ,2wBCfG,oEAAQ,CACnBJ,OAAQW,SAAS2P,KACjB7K,MAAO,CACN/E,KAAM"}